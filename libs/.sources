
#### Lib-K ####
[project = lib:static:k] \
[define(__KERNEL__ = 1)] \
[define(__CONFIG_MIN_BSS__ = 1)] \
[define(__CONFIG_MIN_LIBC__ = 1)] \
[define(__BUILDING_LIBC__ = 1)] \
{
	./libc/*.c;
	./libc/*.S;
	./libc/sys/*.c;
}

[project = lib:static:kfdlibm] \
[define(__KERNEL__ = 1)] \
[flags(-Wno-parentheses\
      ,-Wno-unused-but-set-variable\
      ,-Wno-misleading-indentation\
      ,-Wno-unknown-pragmas\
      ,-Wno-maybe-uninitialized)]\
[define(lint = 1)] { ./libfdlibm/*.c; }

#### Lib-C ####
[project = lib:shared:c] \
[diskfile = /usr/lib/libc.so] \
[define(__BUILDING_LIBC__ = 1)] {
	./libc/*.c;
	./libc/*.S;
	./libc/sys/*.c;
	# isnan() is used by libc to implement 'dtos' (double-to-string)
	# >> To prevent a dependency on fdlibm (which would cause everything to depend on it)
	#    the single source file defining that function is simply included (much less overhead)
	[flags(-Wno-parentheses)] ./libfdlibm/s_isnan.c;
}

[project = lib:static:kdisasm] \
[define(__KERNEL__ = 1)] \
[define(__CONFIG_MIN_BSS__ = 1)] \
[define(__CONFIG_MIN_LIBC__ = 1)] \
{
	./libdisasm/*.c;
}


# Statically linked against any ring-3 application
# >> This library implements the '_start' function that eventually calls main()
# NOTE: This library must be compiled twice as it is always linked
#       statically, meaning that ELF and PE both need their own versions.
    [project = lib:static:_elf_start][name = _start] { ./_start/start.c; }
[pe][project = lib:static:_pe_start] [name = _start] { ./_start/start.c; }


# Various shared libraries
[project = lib:shared:fdlibm]\
[diskfile = /usr/lib/libfdlibm.so]\
[flags(-Wno-parentheses\
      ,-Wno-unused-but-set-variable\
      ,-Wno-misleading-indentation\
      ,-Wno-unknown-pragmas\
      ,-Wno-maybe-uninitialized)]\
[define(lint = 1)] { ./libfdlibm/*.c; }
[project = lib:shared:pthread] [diskfile = /usr/lib/libpthread.so] { ./libpthread/*.c; }
[project = lib:shared:dl]      [diskfile = /usr/lib/libdl.so] { ./libdl/*.c; }
[project = lib:shared:rline]   [diskfile = /usr/lib/librline.so] { ./librline/*.c; }
[project = lib:shared:term]    [diskfile = /usr/lib/libterm.so] { ./libterm/*.c; }
[project = lib:shared:disasm]  [diskfile = /usr/lib/libdisasm.so] { ./libdisasm/*.c; }
[project = lib:shared:curses]  [diskfile = /usr/lib/libcurses.so] [define(__BUILDING_LIBCURSES__ = 1)] { ./libcurses/*.c; }
[project = lib:shared:cmd]     [diskfile = /usr/lib/libcmd.so] [define(__BUILDING_LIBCMD__ = 1)] { ./libcmd/*.c; }





